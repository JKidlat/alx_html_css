/* styles.css */

/* 1. Make <body> a flex container and set its direction to column */
body {
    display: flex;
    flex-direction: column;
    /* Optional: Set min-height to 100vh to ensure body takes full viewport height,
       allowing flex items to distribute space vertically if needed. */
    min-height: 100vh;
}

/* 2. Make <main> a flex container and set its direction to row */
main {
    display: flex;
    flex-direction: row;
    /* 3. Ensure <main> takes up available space, allowing it to grow */
    flex: auto; /* This is a shorthand for flex-grow: 1; flex-shrink: 1; flex-basis: auto; */
}

/* 4. Set <article> to take 2/3 of the width within <main> */
article {
    flex: 2; /* Takes up 2 parts of the available space */
    overflow-y: auto; /* Allow vertical scrolling if content overflows */
    padding: 20px; /* Add some padding for content inside */
    /* Optional: Add a background or border to clearly see its boundaries */
    background-color: #f9f9f9;
    border-right: 1px solid #eee; /* Visual separator from aside */
}

/* 5. Set <aside> to take 1/3 of the width within <main> */
aside {
    flex: 1; /* Takes up 1 part of the available space */
    overflow-y: auto; /* Allow vertical scrolling if content overflows */
    padding: 20px; /* Add some padding for content inside */
    /* Optional: Add a background or border to clearly see its boundaries */
    background-color: #f0f0f0;
}

/* Optional: Basic styling for the header and footer to ensure they are visible */
header, footer {
    /* These are already styled in base.css, but this ensures they behave as flex items */
    width: 100%; /* Ensure they span full width of the body */
}

/* Optional: Add max-width and margin auto to main for larger screens
   This was already in base.css, but it's good to remember its effect */
/*
main {
    max-width: 960px;
    margin: 20px auto;
}
*/
